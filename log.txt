2020.2.8
    -- 初始化项目
    -- 安装stylus npm install stylus stylus-loader --save-dev
    -- stylus 用于转换为css ,stylus-loader让webpack解析（理解）stylus
    -- 语法
        <style lang = "stylus" rel = "stylesheet/stylus">
            .....
        </style>

        结构化，完全通过缩进控制，不需要大括号和分号，冒号是可选的

    -- 增加组件目录
    -- 引入reset样式 http://meyerweb.com/eric/tools/css/reset/
    -- FastClick 移动端0.3秒的延迟

2020.2.9
    -- 引入路由 cnpm install vue-router --save
    -- 定义路由 msite order订单 search查询 profile个人中心
    -- 导航实现路由切换
        - 通过编程式导航实现路由的切换显示
        - 通过动态class和$route.path来实现tab样式切换
        - 通过阿里图标显示导航图标

    -- 图片资源与静态页面
    -- 封装头部组件(HeaderTop)(公共组件封装)(slot 传递标签，props传递数据)
        - slot 占位符
        - props父传子

    -- swiper库定义轮播
        - cnpm install --save swiper
        - 引入swiper的js与样式
        - 使用 new Swiper('',{})

    -- 商家列表拆分（ShopList）

    -- 登入与注册（Login）
    
    -- 添加后台

2020.2.10 
    -- 安装 axios cnpm install --save axios
    -- ajax函数封装（默认get请求） axios + promise  （api->ajax.js）
    -- 定义请求函数模块

    -- 配置代理实现跨域ajax请求

    -- 使用vuex管理状态 cnpm install --save vuex

    -- 读取当前位置：发送请求，读取状态，绑定（展示）数据
    -- 读取食品分类列表
        - 根据一维数组生成二维数组
        - 数据正常渲染，轮播bug
           原因：Swiper必须在列表显示之后才能被创建（开始是一个空数组，数据是后加载的）
           解决：通过watch（还是会延迟）
                -- 状态改变跟界面显示是两步，第一步先更新状态数据，第二次才异步更新界面
                -- 通过setTimeout延迟创建可以实现但不是最佳的
                -- 最佳 nextTick(callback),一旦界面更新就立即调用(将回调延迟到下次dom更新循环之后)
    -- 商家列表数据展示
    -- svg图片在数据未加载前显示在页面上

    -- 星星（Star）组件
       -- 星星算法
            3.2 ： 3（全星） 0（半星） 1（灰星）
            3.5 ： 3（全星） 1（半星） 1（灰星）



        -- vue-router
           - 定义路由
           - $router：路由器对象，包含一些操作路由的参数，来实现编程式导航（路由跳转）
              - 通过$route进行跳转
          - $route：代表当前路由对象，一些当前路由信息数据的容器，path/meta/query/params  
              - 通过$route中的属性动态的去添加一些类

           - <router-link to = "/xxx"></router-link> 路由页面跳转
        
        -- 动态添加class语法
           - 什么时候用对象语法？
               类名确定，只是不确定需要这个类名还是不需要
            - 底部导航动态添加class

        -- slot 占位符 (头部公共组件封装：slot 传递标签(通过slot来实现组件通信标签结构)，props传递数据)
           - 定义 <slot name = "left"></slot>
           - 使用 <div slot = "left"></div>
        
        -- swiper
           - new Swiper('',{})

        -- 


        